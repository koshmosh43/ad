/** <<FontResolver> function dependency: >.init **/

troikaDefine(
function(){return (
function(t,e){const i=Object.create(null),n=Object.create(null);function r(e,r){let o=i[e];o?r(o):n[e]?n[e].push(r):(n[e]=[r],function(e,i){const n=t=>{console.error(`Failure loading font ${e}`,t)};try{const r=new XMLHttpRequest;r.open("get",e,!0),r.responseType="arraybuffer",r.onload=function(){if(r.status>=400)n(new Error(r.statusText));else if(r.status>0)try{const n=t(r.response);n.src=e,i(n)}catch(t){n(t)}},r.onerror=n,r.send()}catch(t){n(t)}}(e,(t=>{t.src=e,i[e]=t,n[e].forEach((e=>e(t))),delete n[e]})))}return function(t,n,{lang:o,fonts:a=[],style:s="normal",weight:l="normal",unicodeFontsURL:h}={}){const c=new Uint8Array(t.length),u=[];t.length||g();const d=new Map,p=[];if("italic"!==s&&(s="normal"),"number"!=typeof l&&(l="bold"===l?700:400),a&&!Array.isArray(a)&&(a=[a]),(a=a.slice().filter((t=>!t.lang||t.lang.test(o))).reverse()).length){const e=1,n=2;let o=0;!function s(l=0){for(let h=l,m=t.length;h<m;h++){const l=t.codePointAt(h);if(o===e&&u[c[h-1]].supportsCodePoint(l)||/\s/.test(t[h]))c[h]=c[h-1],o===n&&(p[p.length-1][1]=h);else for(let t=c[h],m=a.length;t<=m;t++)if(t===m){(o===n?p[p.length-1]:p[p.length]=[h,h])[1]=h,o=n}else{c[h]=t;const{src:n,unicodeRange:p}=a[t];if(!p||f(l,p)){const t=i[n];if(!t)return void r(n,(()=>{s(h)}));if(t.supportsCodePoint(l)){let i=d.get(t);"number"!=typeof i&&(i=u.length,u.push(t),d.set(t,i)),c[h]=i,o=e;break}}}l>65535&&h+1<m&&(c[h+1]=c[h],h++,o===n&&(p[p.length-1][1]=h))}m()}()}else p.push([0,t.length-1]),m();function m(){if(p.length){const i=p.map((e=>t.substring(e[0],e[1]+1))).join("\n");e.getFontsForString(i,{lang:o||void 0,style:s,weight:l,dataUrl:h}).then((({fontUrls:t,chars:e})=>{const i=u.length;let n=0;p.forEach((t=>{for(let r=0,o=t[1]-t[0];r<=o;r++)c[t[0]+r]=e[n++]+i;n++}));let o=0;t.forEach(((e,n)=>{r(e,(e=>{u[n+i]=e,++o===t.length&&g()}))}))}))}else g()}function g(){n({chars:c,fonts:u})}function f(t,e){for(let i=0;i<e.length;i++){const[n,r=n]=e[i];if(n<=t&&t<=r)return!0}return!1}}}
)}
)